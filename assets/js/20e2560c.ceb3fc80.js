"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[39],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>b});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),p=o,b=d["".concat(l,".").concat(p)]||d[p]||f[p]||i;return t?n.createElement(b,a(a({ref:r},u),{},{components:t})):n.createElement(b,a({ref:r},u))}));function b(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3007:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=t(7462),o=(t(7294),t(3905));const i={sidebar_position:4},a="Bifrost Query Mode",c={unversionedId:"cli-reference/bifrost-query-mode",id:"cli-reference/bifrost-query-mode",title:"Bifrost Query Mode",description:"",source:"@site/docs/cli-reference/bifrost-query-mode.md",sourceDirName:"cli-reference",slug:"/cli-reference/bifrost-query-mode",permalink:"/brambl-cli/docs/current/cli-reference/bifrost-query-mode",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Genus Query Mode",permalink:"/brambl-cli/docs/current/cli-reference/genus-query-mode"},next:{title:"Wallet Mode",permalink:"/brambl-cli/docs/current/cli-reference/wallet-mode"}},l={},s=[],u={toc:s},d="wrapper";function f(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bifrost-query-mode"},"Bifrost Query Mode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Command: bifrost-query [block-by-height|block-by-id|transaction-by-id] [options]\nBifrost query mode\nCommand: bifrost-query block-by-height\nGet the block at a given height\n  -h, --host <value>       The host of the node. (mandatory)\n  --bifrost-port <value>   Port Bifrost node. (mandatory)\n  --height <value>         The height of the block. (mandatory)\nCommand: bifrost-query block-by-id\nGet the block with a given id\n  -h, --host <value>       The host of the node. (mandatory)\n  --bifrost-port <value>   Port Bifrost node. (mandatory)\n  --block-id <value>       The id of the block in base 58. (mandatory)\nCommand: bifrost-query transaction-by-id\nGet the transaction with a given id\n  -h, --host <value>       The host of the node. (mandatory)\n  --bifrost-port <value>   Port Bifrost node. (mandatory)\n  --transaction-id <value>\n                           The id of the transaction in base 58. (mandatory)\n                           \n")))}f.isMDXComponent=!0}}]);