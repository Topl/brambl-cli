"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[6686],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=o,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||i;return r?n.createElement(d,a(a({ref:t},s),{},{components:r})):n.createElement(d,a({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8897:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:13},a="Mint a Group Constructor Token",l={unversionedId:"how-tos/mint-group",id:"how-tos/mint-group",title:"Mint a Group Constructor Token",description:"To create a simple minting transaction of group constructor tokens we run the",source:"@site/docs/how-tos/mint-group.md",sourceDirName:"how-tos",slug:"/how-tos/mint-group",permalink:"/brambl-cli/docs/current/how-tos/mint-group",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Create a Complex Transaction",permalink:"/brambl-cli/docs/current/how-tos/complex-tx"},next:{title:"Mint a Series Constructor Token",permalink:"/brambl-cli/docs/current/how-tos/mint-series"}},p={},c=[{value:"Example of group policy file format",id:"example-of-group-policy-file-format",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mint-a-group-constructor-token"},"Mint a Group Constructor Token"),(0,o.kt)("p",null,"To create a simple minting transaction of group constructor tokens we run the\nfollowing command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli simple-minting create --from-fellowship $FELLOWSHIP --from-template $LOCK_TEMPLATE  -h $HOST --port $PORT -n private --keyfile $KEYFILE -w $PASSWORD -o $MINTING_TX -i $GROUP_POLICY  -a $AMOUN_TOKENS_TO_MINT --fee $FEE_AMOUNT --walletdb $WALLET_DB --mint-token group\n")),(0,o.kt)("p",null,"This will create a minting transaction for the fellowship ",(0,o.kt)("inlineCode",{parentName:"p"},"$FELLOWSHIP")," and template ",(0,o.kt)("inlineCode",{parentName:"p"},"$LOCK_TEMPLATE")," and store the result in the file ",(0,o.kt)("inlineCode",{parentName:"p"},"$MINTING_TX"),". The keyfile ",(0,o.kt)("inlineCode",{parentName:"p"},"$KEYFILE")," is used to derive keys. The password for the wallet is ",(0,o.kt)("inlineCode",{parentName:"p"},"$PASSWORD"),". The group policy file is ",(0,o.kt)("inlineCode",{parentName:"p"},"$GROUP_POLICY"),". The amount of tokens to mint is ",(0,o.kt)("inlineCode",{parentName:"p"},"$AMOUN_TOKENS_TO_MINT"),". The fee amount is ",(0,o.kt)("inlineCode",{parentName:"p"},"$FEE_AMOUNT"),"."),(0,o.kt)("h2",{id:"example-of-group-policy-file-format"},"Example of group policy file format"),(0,o.kt)("p",null,"A group simple policy looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"label: MyGroupPolicy\nregistrationUtxo: tv4zwbVos3RCB2x3r2PNbMU4PJANU7rGpine8dcjvZr#0\n")),(0,o.kt)("p",null,"A group policy with a fixed series identifier looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"label: MyGroupPolicy\nfixedSeries: 928b20366943e2afd11ebc0eae2e53a93bf177a4fcf35bcc64d503704e65e202\nregistrationUtxo: tv4zwbVos3RCB2x3r2PNbMU4PJANU7rGpine8dcjvZr#0\n")))}m.isMDXComponent=!0}}]);