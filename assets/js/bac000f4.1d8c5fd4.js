"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[8049],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,f=d["".concat(i,".").concat(u)]||d[u]||b[u]||o;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>b,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:17},c="Check balance of an address",l={unversionedId:"how-tos/check-balance",id:"how-tos/check-balance",title:"Check balance of an address",description:"You can check the balance of an address using the following command:",source:"@site/docs/how-tos/check-balance.md",sourceDirName:"how-tos",slug:"/how-tos/check-balance",permalink:"/brambl-cli/docs/current/how-tos/check-balance",draft:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"Inspecting a Transaction",permalink:"/brambl-cli/docs/current/how-tos/inspect-tx"},next:{title:"Reset an Interaction",permalink:"/brambl-cli/docs/current/how-tos/reset-interaction"}},i={},s=[],p={toc:s},d="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"check-balance-of-an-address"},"Check balance of an address"),(0,a.kt)("p",null,"You can check the balance of an address using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli wallet balance --from-fellowship $FELLOWSHIP --from-template $LOCK_TEMPLATE --walletdb $WALLET --host $HOST --port $PORT\n")),(0,a.kt)("p",null,"This will show you the balance of the address ",(0,a.kt)("inlineCode",{parentName:"p"},"$FELLOWSHIP")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"$LOCK_TEMPLATE")," in the wallet ",(0,a.kt)("inlineCode",{parentName:"p"},"$WALLET")," in the node ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOST:$PORT"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"--from-interaction")," can optionally be used to choose the interaction. The output will look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Asset(0a205542a9a464ba60a155c28d55e9d084ce0b75eb8bd3a2ed5a27ee548e25f86616, \n0a2045d4601f88b8b51c91e45d5b88db2fb12d2e2beeb7d2a4160b424c633e5ae8e8): 1000\nSeries(0a2045d4601f88b8b51c91e45d5b88db2fb12d2e2beeb7d2a4160b424c633e5ae8e8): 1\nGroup(0a205542a9a464ba60a155c28d55e9d084ce0b75eb8bd3a2ed5a27ee548e25f86616): 1\n")),(0,a.kt)("p",null,"This also supports the ",(0,a.kt)("inlineCode",{parentName:"p"},"--from address")," parameter to check the balance of any address. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli wallet balance --from-address $ADDRESS --walletdb $WALLET --host $HOST --port $PORT\n")))}b.isMDXComponent=!0}}]);